set nocompatible              " be iMproved, required
filetype off                  " required

" Path to current folder
let s:current_dir = expand('%:p:h')


" set the runtimSetup/ path to include Vundle and initialize
set rtp+=~/Setup/vim/bundle/Vundle.vim
call vundle#begin('~/Setup/vim/bundle/')
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim' " required!

if has('python')
  " --- YouCompleteMe ---
  " Code autocompletion
  Plugin 'ycm-core/YouCompleteMe'

  " --- UltiSnips ---
  " Use snippets
  Plugin 'SirVer/ultisnips'
  Plugin 'honza/vim-snippets' " Snippets are separated from the engine. Add this if you want them:
  let g:UltiSnipsExpandTrigger='<c-k>'
  let g:UltiSnipsJumpForwardTrigger='<c-k>'
  let g:UltiSnipsJumpBackwardTrigger='<c-s-k>'
  let g:UltiSnipsListSnippets="<c-K>"
  " let g:UltiSnipsEditSplit="vertical" " If you want :UltiSnipsEdit to split your window.
endif

" --- NERDTree ---
" Show files as a tree
Plugin 'scrooloose/nerdtree'
Plugin 'xuyuanp/nerdtree-git-plugin' " Show git status in tree
augroup NERD
  au!
  autocmd VimEnter * NERDTree " Open nerdtree automatically when vim starts
  autocmd VimEnter * wincmd p " Focus file buffer instead of nerdtree
augroup END
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif " Close vim when no more buffers are open
let NERDTreeShowHidden=1 " Show hidden files in tree
let g:NERDTreeWinSize=50

" --- Tagbar ---
Plugin 'majutsushi/tagbar'
nmap <F8> :TagbarToggle<CR>
let g:tagbar_width = 60

" --- vim-Airline ---
" New vim statusline
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
let g:airline#extensions#tabline#enabled = 1 " Automatically displays all buffers when there's only one tab open
let g:airline_powerline_fonts = 1 " Enable powerline fonts
let g:airline#extensions#tabline#buffer_idx_mode = 1

" --- ctrlp ---
" Effectivly search files and/or buffer
Plugin 'ctrlpvim/ctrlp.vim'
let g:ctrlp_cmd = 'CtrlPCurWD'
let g:ctrlp_custom_ignore = {
  \ 'dir': '\v[\/](out|utils|project|staging|bundle|plugins)|(\.(git))$', 
  \ 'file': '\v\.(exe|so|dll|swp)$',
  \ }
let g:ctrlp_show_hidden = 1

" --- EasyMotion ---
" Enables easier jumping in buffer
Plugin 'easymotion/vim-easymotion'

" --- Delimitmate ---
" Automatically closes quotes, parathesis, brackets, etc
Plugin 'raimondi/delimitmate'

" --- Palenight colorscheme ---
Plugin 'drewtempelmeyer/palenight.vim'

" --- Tnux focus events ---
Plugin 'tmux-plugins/vim-tmux-focus-events'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
let g:ycm_autoclose_preview_window_after_completion = 1
" Let clangd fully control code completion
let g:ycm_clangd_uses_ycmd_caching = 0
" " Use installed clangd, not YCM-bundled clangd which doesn't get updates.
let g:ycm_clangd_binary_path = exepath("clangd")

